version: '3.8'

services:

  postgres:
    image: postgres:10.16
    container_name: postgres_container
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: ${RS_DB_USER}
      POSTGRES_USER: ${RS_DB_USER}
      POSTGRES_PASSWORD: ${RS_DB_PASSWORD}
    volumes:
      - ./scripts/create_database.sql:/docker-entrypoint-initdb.d/1.sql
      - ./scripts/seed_database.sql:/docker-entrypoint-initdb.d/2.sql
    networks: [ "backend" ]
    restart: always


  # Hostname: postgres
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    logging:
      driver: none
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/root/.pgadmin

    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks: [ "backend" ]
    depends_on:
      - postgres
    restart: unless-stopped


  api:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: api_container
    networks: [ "backend" ]
    ports:
      - '4200:4200'
    environment:
      RS_DB_HOST: postgres
    depends_on:
      - postgres
    restart: always




  prometheus:
    image: prom/prometheus:v2.24.0
    container_name: prometheus_container
    logging:
      driver: none
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    networks: [ "backend" ]
    restart: unless-stopped



  grafana:
    image: grafana/grafana:latest
    logging:
      driver: none
    container_name: grafana_container
    networks: [ "backend" ]
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    restart: unless-stopped



networks:
  backend:
    driver: bridge


volumes:
  postgres:
  pgadmin:
  grafana-storage:
  prometheus_data:
